services:
  backend:
    build:
      context: .
      dockerfile: backend.dockerfile
    ports:
      - "7000:7000"
    volumes:
      - .:/app
    restart: always
    networks:
      - monitoring

  frontend:
    build:
      context: .
      dockerfile: frontend.dockerfile
    ports:
      - "3000:80"
    restart: always
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_project
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - monitoring

  grafana:
    image: grafana/grafana-enterprise:latest
    container_name: grafana_project
    ports:
      - "3001:3000"  # Changed to 3001 to avoid conflict with frontend on 3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}
